`line 2 "wip.tlv" 0 //_\TLV_version 1d: tl-x.org, generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro
`line 24 "wip.tlv" 1

//_\SV
module serv_aligner
   (
    input wire clk,
    input wire rst,
    // serv_top
    input  wire [31:0]  i_ibus_adr,
    input  wire         i_ibus_cyc,
    output wire [31:0]  o_ibus_rdt,
    output wire         o_ibus_ack,
    // serv_rf_top
    output wire [31:0]  o_wb_ibus_adr,
    output wire         o_wb_ibus_cyc,
    input  wire [31:0]  i_wb_ibus_rdt,
    input  wire         i_wb_ibus_ack);
// ---------- Generated Code Inlined Here (before 1st \TLV) ----------
`line 0 "wip.sv" 1
// Generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro from Redwood EDA, LLC.
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)





//
// Signals declared top-level.
//

// For |default$ack_en.
logic DEFAULT_ack_en_a0;

// For |default$ctrl_misal.
logic DEFAULT_ctrl_misal_n1,
      DEFAULT_ctrl_misal_a0;

// For |default$i_ibus_adr.
logic [31:0] DEFAULT_i_ibus_adr_a0;

// For |default$i_ibus_cyc.
logic DEFAULT_i_ibus_cyc_a0;

// For |default$i_wb_ibus_ack.
logic DEFAULT_i_wb_ibus_ack_a0;

// For |default$i_wb_ibus_rdt.
logic [31:0] DEFAULT_i_wb_ibus_rdt_a0;

// For |default$ibus_rdt_concat.
logic [31:0] DEFAULT_ibus_rdt_concat_a0;

// For |default$lower_hw.
logic [15:0] DEFAULT_lower_hw_n1,
             DEFAULT_lower_hw_a0;

// For |default$reset.
logic DEFAULT_reset_a0;




   //
   // Scope: |default
   //

      // Staging of $ctrl_misal.
      always_ff @(posedge clk) DEFAULT_ctrl_misal_a0 <= DEFAULT_ctrl_misal_n1;

      // Staging of $lower_hw.
      always_ff @(posedge clk) DEFAULT_lower_hw_a0[15:0] <= DEFAULT_lower_hw_n1[15:0];



// ---------- Generated Code Ends ----------
`line 42 "wip.tlv" 2
//_\TLV
   // Connect Verilog inputs to pipesignals
   //_|default
      //_@0
         assign DEFAULT_reset_a0 = rst;
         assign DEFAULT_i_ibus_adr_a0[31:0] = i_ibus_adr;
         assign DEFAULT_i_ibus_cyc_a0 = i_ibus_cyc;
         assign DEFAULT_i_wb_ibus_rdt_a0[31:0] = i_wb_ibus_rdt;
         assign DEFAULT_i_wb_ibus_ack_a0 = i_wb_ibus_ack;

   `line 7 "wip.tlv" 1   // Instantiated from wip.tlv, 50 as: m5+serv_aligner_logic(/top)
      //_|default
         //_@0
            /* 16-bit register used to hold the upper half word of the current instruction in-case
               concatenation will be required with the upper half word of upcoming instruction
            */
            assign DEFAULT_lower_hw_n1[15:0] = DEFAULT_i_wb_ibus_ack_a0 ? DEFAULT_i_wb_ibus_rdt_a0[31:16] : DEFAULT_lower_hw_a0;
   
            assign DEFAULT_ibus_rdt_concat_a0[31:0] = {DEFAULT_i_wb_ibus_rdt_a0[15:0], DEFAULT_lower_hw_a0};
   
            /* Two control signals: ack_en, ctrl_misal are set to control the bus transactions between
            SERV core and the memory
            */
            assign DEFAULT_ack_en_a0 = ! (DEFAULT_i_ibus_adr_a0[1] & ! DEFAULT_ctrl_misal_a0);
   
            assign DEFAULT_ctrl_misal_n1 = DEFAULT_reset_a0 ? 1'b0 :
                            (DEFAULT_i_wb_ibus_ack_a0 & DEFAULT_i_ibus_adr_a0[1]) ? ! DEFAULT_ctrl_misal_a0 :
                            DEFAULT_ctrl_misal_a0;
   //_\end_source
   `line 51 "wip.tlv" 2

   // Connect pipesignals to Verilog outputs
   //_|default
      //_@0
         /*SV_plus*/
            /* From SERV core to Memory

            o_wb_ibus_adr: Carries address of instruction to memory. In case of misaligned access,
            which is caused by pc+2 due to compressed instruction, next instruction is fetched
            by pc+4 and concatenation is done to make the instruction aligned.

            o_wb_ibus_cyc: Simply forwarded from SERV to Memory and is only altered by memory or SERV core.
            */
            assign o_wb_ibus_adr = DEFAULT_ctrl_misal_a0 ? (DEFAULT_i_ibus_adr_a0 + 32'b100) : DEFAULT_i_ibus_adr_a0;
            assign o_wb_ibus_cyc = DEFAULT_i_ibus_cyc_a0;
            assign o_ibus_ack = DEFAULT_i_wb_ibus_ack_a0 & DEFAULT_ack_en_a0;
            assign o_ibus_rdt = DEFAULT_ctrl_misal_a0 ? DEFAULT_ibus_rdt_concat_a0 : DEFAULT_i_wb_ibus_rdt_a0;
//_\SV
endmodule


// Undefine macros defined by SandPiper.
`undef BOGUS_USE
