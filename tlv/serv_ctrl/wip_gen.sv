// Generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro from Redwood EDA, LLC.
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)


`include "sandpiper_gen.vh"





//
// Signals declared top-level.
//

// For |default$i_buf.
wire [B:0] DEFAULT_i_buf_a0;

// For |default$i_cnt0.
wire DEFAULT_i_cnt0_a0;

// For |default$i_cnt1.
wire DEFAULT_i_cnt1_a0;

// For |default$i_cnt12to31.
wire DEFAULT_i_cnt12to31_a0;

// For |default$i_cnt2.
wire DEFAULT_i_cnt2_a0;

// For |default$i_csr_pc.
wire [B:0] DEFAULT_i_csr_pc_a0;

// For |default$i_imm.
wire [B:0] DEFAULT_i_imm_a0;

// For |default$i_iscomp.
wire DEFAULT_i_iscomp_a0;

// For |default$i_jal_or_jalr.
wire DEFAULT_i_jal_or_jalr_a0;

// For |default$i_jump.
wire DEFAULT_i_jump_a0;

// For |default$i_pc_en.
wire DEFAULT_i_pc_en_a0;

// For |default$i_pc_rel.
wire DEFAULT_i_pc_rel_a0;

// For |default$i_rst.
wire DEFAULT_i_rst_a0;

// For |default$i_trap.
wire DEFAULT_i_trap_a0;

// For |default$i_utype.
wire DEFAULT_i_utype_a0;

// For |default$new_pc.
wire [B:0] DEFAULT_new_pc_a0;

// For |default$o_bad_pc_output.
wire [B:0] DEFAULT_o_bad_pc_output_a0;

// For |default$o_ibus_adr_input.
wire [31:0] DEFAULT_o_ibus_adr_input_a0;

// For |default$o_rd_output.
wire [B:0] DEFAULT_o_rd_output_a0;

// For |default$offset_aa.
wire [B:0] DEFAULT_offset_aa_a0;

// For |default$offset_bb.
wire [B:0] DEFAULT_offset_bb_a0;

// For |default$pc_plus_4.
wire [B:0] DEFAULT_pc_plus_4_a0;

// For |default$pc_plus_4_carry_reg.
wire DEFAULT_pc_plus_4_carry_reg_n1;
reg  DEFAULT_pc_plus_4_carry_reg_a0;

// For |default$pc_plus_4_carry_reg_wire.
wire DEFAULT_pc_plus_4_carry_reg_wire_a0;

// For |default$pc_plus_offset_aligned.
wire DEFAULT_pc_plus_offset_aligned_a0;

// For |default$pc_plus_offset_carry_reg.
wire DEFAULT_pc_plus_offset_carry_reg_n1;
reg  DEFAULT_pc_plus_offset_carry_reg_a0;

// For |default$pc_plus_offset_carry_reg_wire.
wire DEFAULT_pc_plus_offset_carry_reg_wire_a0;

// For |default$plus_4.
wire [B:0] DEFAULT_plus_4_a0;

// For |default$program_counter.
wire [B:0] DEFAULT_program_counter_a0;

// For |default$reset.
wire DEFAULT_reset_a0;




   //
   // Scope: |default
   //

      // Staging of $pc_plus_4_carry_reg.
      always @(posedge clk) DEFAULT_pc_plus_4_carry_reg_a0 <= DEFAULT_pc_plus_4_carry_reg_n1;

      // Staging of $pc_plus_offset_carry_reg.
      always @(posedge clk) DEFAULT_pc_plus_offset_carry_reg_a0 <= DEFAULT_pc_plus_offset_carry_reg_n1;



