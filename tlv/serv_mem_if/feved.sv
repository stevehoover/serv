//_\TLV_version 1d: tl-x.org, generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro
//_\source wip.tlv 34

//_\SV
`default_nettype none
module serv_mem_if
  #(
    parameter [0:0] WITH_CSR = 1,
    parameter       W = 1,
    parameter       B = W-1
  )
  (
   input wire        i_clk,
   //State
   input wire [1:0]  i_bytecnt,
   input wire [1:0]  i_lsb,
   output wire       o_misalign,
   //Control
   input wire        i_signed,
   input wire        i_word,
   input wire        i_half,
   //MDU
   input wire        i_mdu_op,
   //Data
   input wire [B:0] i_bufreg2_q,
   output wire [B:0] o_rd,
   //External interface
   output wire [3:0] o_wb_sel);
// ---------- Generated Code Inlined Here (before 1st \TLV) ----------
// Generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro from Redwood EDA, LLC.
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)





//
// Signals declared top-level.
//

// For |default$bufreg2_q.
logic [B:0] DEFAULT_bufreg2_q_a0;

// For |default$bytecnt.
logic [1:0] DEFAULT_bytecnt_a0;

// For |default$dat_valid.
logic DEFAULT_dat_valid_a0;

// For |default$half.
logic DEFAULT_half_a0;

// For |default$lsb.
logic [1:0] DEFAULT_lsb_a0;

// For |default$mdu_op.
logic DEFAULT_mdu_op_a0;

// For |default$misalign.
logic DEFAULT_misalign_a0;

// For |default$rd.
logic [B:0] DEFAULT_rd_a0;

// For |default$signbit.
logic DEFAULT_signbit_n1,
      DEFAULT_signbit_a0;

// For |default$signed.
logic DEFAULT_signed_a0;

// For |default$wb_sel.
logic [3:0] DEFAULT_wb_sel_a0;

// For |default$word.
logic DEFAULT_word_a0;




   //
   // Scope: |default
   //

      // Staging of $signbit.
      always_ff @(posedge clk) DEFAULT_signbit_a0 <= DEFAULT_signbit_n1;



// ---------- Generated Code Ends ----------
//_\TLV
   /*SV_plus*/
      wire clk = i_clk;

   // Connect Verilog inputs:
   //_|default
      //_@0
         assign DEFAULT_bytecnt_a0[1:0] = i_bytecnt;
         assign DEFAULT_lsb_a0[1:0] = i_lsb;
         assign DEFAULT_signed_a0 = i_signed;
         assign DEFAULT_word_a0 = i_word;
         assign DEFAULT_half_a0 = i_half;
         assign DEFAULT_mdu_op_a0 = i_mdu_op;
         assign DEFAULT_bufreg2_q_a0[B:0] = i_bufreg2_q;

   //_\source wip.tlv 6   // Instantiated from wip.tlv, 76 as: m5+serv_mem_if(/top)
      //_|default
         //_@0
            // Determine if data is valid for this memory operation
            assign DEFAULT_dat_valid_a0 =
                 DEFAULT_mdu_op_a0 |
                 DEFAULT_word_a0 |
                 (DEFAULT_bytecnt_a0 == 2'b00) |
                 (DEFAULT_half_a0 & ! DEFAULT_bytecnt_a0[1]);
   
            // Update signbit register when data is valid
            assign DEFAULT_signbit_n1 = DEFAULT_dat_valid_a0 ? DEFAULT_bufreg2_q_a0[B] : DEFAULT_signbit_a0;
   
            // Read data output: valid data or sign-extended from signbit
            assign DEFAULT_rd_a0[B:0] = DEFAULT_dat_valid_a0 ? DEFAULT_bufreg2_q_a0 : {W{DEFAULT_signed_a0 & DEFAULT_signbit_a0}};
   
            // Write byte select signals for different access types
            // [3]: (lsb == 2'b11) | word | (half & lsb[1])
            // [2]: (lsb == 2'b10) | word
            // [1]: (lsb == 2'b01) | word | (half & !lsb[1])
            // [0]: (lsb == 2'b00)
            assign DEFAULT_wb_sel_a0[3:0] = {(DEFAULT_lsb_a0 == 2'b11) | DEFAULT_word_a0 | (DEFAULT_half_a0 & DEFAULT_lsb_a0[1]), (DEFAULT_lsb_a0 == 2'b10) | DEFAULT_word_a0, (DEFAULT_lsb_a0 == 2'b01) | DEFAULT_word_a0 | (DEFAULT_half_a0 & ! DEFAULT_lsb_a0[1]), (DEFAULT_lsb_a0 == 2'b00)};
   
            /*
             mem_misalign is checked after the init stage to decide whether to do a data
             bus transaction or go to the trap state. It is only guaranteed to be correct
             at this time
             */
            assign DEFAULT_misalign_a0 = WITH_CSR & ((DEFAULT_lsb_a0[0] & (DEFAULT_word_a0 | DEFAULT_half_a0)) | (DEFAULT_lsb_a0[1] & DEFAULT_word_a0));
   //_\end_source

   // Connect Verilog outputs:
   //_|default
      //_@0
         assign o_misalign = DEFAULT_misalign_a0;
         assign o_rd = DEFAULT_rd_a0;
         assign o_wb_sel = DEFAULT_wb_sel_a0;

//_\SV
endmodule


// Undefine macros defined by SandPiper.
`undef BOGUS_USE
